.counters-board {
    height: var(--counters-board-height);
    padding: 0.5rem 2rem;
    margin: 0;
    box-shadow: 2px 2px 5px rgba(0, 0, 0, 0.4);
    display: flex;
}

.counter {
    margin-right: 2rem;
}

.counter-header {
    font-size: 1rem;
    line-height: 1;
    margin: 0;
    color:rgba(0, 0, 0, 0.4);
    text-transform: capitalize;
}

.counter-content {
    font-size: 2rem;
    color: var(--gradient);
}

.deck {
    display: flex;
    align-items: center;
    justify-content: center;
    height: calc(100vh - var(--counters-board-height));
    margin: auto;
}

.deck__container {
    display: flex;
    flex-wrap: wrap;
    max-width: 50rem;
    align-items: center;
    justify-content: center;
}

.card {
    position: relative;
    width: 7rem;
    height: 7rem;
    margin: 0.5rem;
    cursor: pointer;
    transition: 0.5s;
    backface-visibility: hidden;
    background-image: var(--gradient);
    border-radius: 0.5rem;
    box-shadow: 2px 2px 4px rgba(0, 0, 0, 0.4);
    transform-style: preserve-3d;
}

.cardContent {
    position: absolute;
    bottom: 0;
    top: 0;
    right: 0;
    left: 0;
    display: flex;
    justify-content: center;
    transform: rotateY(-180deg);
    background-color: white;
    border-radius: 0.5rem;
    box-shadow: 2px 2px 4px rgba(0, 0, 0, 0.4);
    backface-visibility: hidden;
    align-items: center;
    font-size: 4rem;
    padding-top: 0.4rem;
}

.card.reversed {
    transform: rotateY(-180deg);
}

.cardContent::selection {
   background: transparent;
}

@keyframes success {
    from {
        opacity: 1;
    }
    20% {
        transform: rotateY(-180deg) scale3D(1.1, 1.1, 1.1);
    }
    to {
        opacity: 0;
    }
}

.success .cardContent {
    animation: success 1.5s ease-in-out forwards;
}


@keyframes failure {
    from {
        transform: rotateY(-180deg) translateX(3px);
    } 
    to {
        transform: rotateY(-180deg) translateX(-3px);
    }
}

.failure {
    animation-name: failure;
    animation-duration: 0.1s;
    animation-iteration-count: 4;
}